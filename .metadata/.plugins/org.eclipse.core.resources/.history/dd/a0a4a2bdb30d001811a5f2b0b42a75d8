package net.zive.shibayu.cli;

import gnu.getopt.Getopt;
import jp.hishidama.eval.ExpRuleFactory;
import jp.hishidama.eval.Expression;
import jp.hishidama.eval.Rule;
import net.zive.shibayu.cli.base.BaseFileInCli;

/**
 * jevalコマンド.
 * @author Yu.Sba
 *
 */
public class JEval extends BaseFileInCli {
    /**
     * 小数点の有効桁数 .
     */
    private int roundValue = -1;

    @Override
    protected final boolean checkArgs(final String[] args) {
        Getopt g = new Getopt(this.getClass().getName(), args, "r:");

        int c = -1;
        while ((c = g.getopt()) != -1) {
            switch (c) {
            case 'r':
                roundValue = Integer.parseInt(g.getOptarg());
                break;
            default:
                return false;
            }
        }
        return true;
    }

    @Override
    protected void beforeAccept() throws Exception {
    }

    @Override
    protected final boolean accept(final String data) throws Exception {
        Rule rule = ExpRuleFactory.getDefaultRule();
        Expression exp = rule.parse(data);
        double result = exp.evalDouble();
        if (roundValue > 0) {
            System.out.println(String.format(
                    "%." + roundValue + "f", result));
        } else {
            System.out.println(result);            
        }
        return true;
    }

    @Override
    protected void afterAccept() throws Exception {
    }

    @Override
    protected final String helpString() {
        StringBuilder stb = new StringBuilder();
        stb.append("<概要>\n");
        stb.append("jevalコマンド。\n");
        stb.append("指定された計算文字列の結果を出力する。\n\n");
        stb.append("<コマンド>\n");
        stb.append("jeval [FILE] \n\n");
        stb.append("<引数>\n");
        stb.append("FILE:ファイル(※省略可)\n");
        stb.append("* FILEを省略した場合は標準入力からデータを受取る。");
        stb.append("<オプション>\n");
        stb.append("-r:有効桁数\n\n");
        return stb.toString();
    }

    @Override
    protected final String usageString() {
        return "Usage:jeval [FILE]";
    }

    /**
     * メイン処理.
     * @param args コマンド引数
     */
    public static void main(final String[] args) {
        (new JEval()).exec(args);
    }
}
