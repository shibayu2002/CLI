package net.zive.shibayu.cli;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

import gnu.getopt.Getopt;

/**
 * cat処理.
 * @author Yu.Sba
 *
 */
public class JCat extends BaseCli {
    /**
     * 開始行.
     */
    private long startLine = -1;

    /**
     * 終了行.
     */
    private long endLine = -1;

    @Override
    protected final boolean checkArgs(final String[] args) {
        Getopt g = new Getopt(this.getClass().getName(), args, "s:e:");

        int c = -1;
        while ((c = g.getopt()) != -1) {
            switch (c) {
            case 's':
                startLine = Integer.parseInt(g.getOptarg());
                break;
            case 'e':
                endLine = Integer.parseInt(g.getOptarg());
                break;
            default:
                return false;
            }
        }
        return true;
    }

    @Override
    protected void beforeAccept() throws Exception {
    }

    @Override
    protected void afterAccept() throws Exception {
    }


    @Override
    protected final void accept(final String data) throws Exception {
        BufferedReader br = new BufferedReader(
                new FileReader(new File(data.trim())));

        String str = null;
        long cnt = 0;
        try {
            while ((str = br.readLine()) != null) {
                if (cnt >= startLine - 1) {
                    System.out.println(str);
                }
                cnt = cnt + 1;
                if ((endLine != -1) && (cnt >= endLine)) {
                    break;
                }
            }
        } catch (IOException e) {
            throw e;
        } finally {
            br.close();
        }
    }

    @Override
    protected final String helpString() {
        StringBuilder stb = new StringBuilder();
        stb.append("<概要>\n");
        stb.append("指定されたファイルの内容を標準出力に出力する。\n\n");
        stb.append("<コマンド>\n");
        stb.append("cat [FILE] [-s:開始行] [-e:終了行]\n\n");
        stb.append("<引数>\n");
        stb.append("FILE:ファイルパス(※省略可)\n");
        stb.append("* FILEを省略した場合は標準入力からファイルパスを指定する。\n\n");
        stb.append("<オプション>\n");
        stb.append("-s:開始行\n");
        stb.append("-e:終了行\n");
        return stb.toString();
    }

    @Override
    protected final String usageString() {
        return "Usage:jcat [FILE] [-s:開始行] [-e:終了行]";
    }

    /**
     * メイン処理.
     * @param args コマンド引数
     */
    public static void main(final String[] args) {
        (new JCat()).exec(args);
    }
}
